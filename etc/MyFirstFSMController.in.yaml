---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  ground:
    module: env/ground
# General constraints, always on
constraints:
- type: contact
- type: dynamics
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useMinimal: true
# Initial set of contacts
contacts:
- r1: jvrc1
  r2: ground
  r1Surface: LeftFoot
  r2Surface: AllGround
- r1: jvrc1
  r2: ground
  r1Surface: RightFoot
  r2Surface: AllGround

# Some options for a specific robot
jvrc1:
  posture:
    stiffness: 1
    weight: 10
  ff:
    stiffness: 2
    weight: 100
# Implement some additional text states
states:
  # Keep the CoM centered between the feet, and the chest upright
  StandingBase:
    base: MetaTasks
    tasks:
      CoM:
        type: com
        above: [LeftFoot, RightFoot]
        weight: 2000
        stiffness: 5
      KeepChest:
        type: orientation
        body: WAIST_R_S
        weight: 100
        stiffness: 1


  LeftHandForward:
    base: StandingBase
    tasks:
      LeftHandTrajectory:
        type: body6d
        body: l_wrist
        orientation: [0.7, 0, 0.7, 0]
        position: [0.5, 0.25, 1.1]
        completion:
          eval: 0.1
  LeftHandMoveBack:
    base: StandingBase
    tasks:
      LeftHandMoveBack:
        type: body6d
        body: l_wrist
        orientation: [1.0, 0, 0.0, 0]
        position: [0.2, 0.24, 0.85]
        completion:
          eval: 0.1
  RightHandForward:
    base: StandingBase
    tasks:
      RightHandTrajectory:
        type: body6d
        body: r_wrist
        orientation: [0.7, 0, 0.7, 0]
        position: [0.5, -0.25, 1.1]
        completion:
          eval: 0.1
  RightHandMoveBack:
    base: StandingBase
    tasks:
      RightHandMoveBack:
        type: body6d
        body: r_wrist
        orientation: [1.0, 0, 0.0, 0]
        position: [0.2, -0.24, 0.85]
        completion:
          eval: 0.1

  LookAtLeftHand:
    base: StandingBase
    tasks:
      LookAtLeftHand:
        type: lookAtSurface
        body: dcamera
        bodyVector: [1.0, -1.0, 1.0] 
        surface: LeftGripper

  LookAtRightHand:
    base: StandingBase
    tasks:
      LookAtRightHand:
        type: lookAtSurface
        body: dcamera
        bodyVector: [1.0, -1.0, 1.0] 
        surface: RightGripper


  LookAndMoveLeftHand:
    base: Parallel
    states: [LeftHandForward, LookAtLeftHand]


  LookAndMoveRightHand:
    base: Parallel
    states: [LookAtRightHand, RightHandForward]


  LookForward:
    base: StandingBase
    tasks:
      LookAtRightHand:
        type: lookAt
        body: dcamera
        bodyVector: [1.0, -1.0, 1.0] 
        targetVector: [1.0, -0.9, 0.2]

  LookAndMoveLeftHandBack:
    base: Parallel
    states: [LookForward, LeftHandMoveBack]
    configs:
      Pause:
        duration: 5

  LookAndMoveRightHandBack:
    base: Parallel
    states: [LookForward, RightHandMoveBack]


  BothHandMove:
    base: Parallel
    states: [RightHandForward, LeftHandForward,LookForward]

  BothHandMoveBack:
    base: Parallel
    states: [RightHandMoveBack, LeftHandMoveBack,LookForward]

transitions:
- [LookAndMoveLeftHand,         OK, LookAndMoveLeftHandBack, Auto]
- [LookAndMoveLeftHandBack,       OK, LookAndMoveRightHand, Auto]

- [LookAndMoveRightHand,        OK, LookAndMoveRightHandBack, Auto]
- [LookAndMoveRightHandBack,        OK, BothHandMove, Auto]
- [BothHandMove,        OK, BothHandMoveBack, Auto]
- [BothHandMoveBack,        OK, LookAndMoveLeftHand, Auto]


# Initial state
init: LookAndMoveLeftHand